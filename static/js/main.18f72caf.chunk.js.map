{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showalert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","cap","msg","App","setDarkMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18f72caf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-a\" href=\"/about\">About</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showalert(\"Converted to Uppercase!\" , \"success\")\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className = \"container\" style={{color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h1>{props.heading} </h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'dark' ? 'grey' : 'white',\r\n            color : props.mode === 'dark' ? 'white' : 'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            \r\n            <button className=\"btn btn-primary mx-2 \" onClick={handleLowClick}>Convert to LowerCase</button>\r\n        </div>\r\n        <div className=\"container my-3\"  style={{color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h1>Your text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length } Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const cap = (word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{cap(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div> \r\n     \r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import TextForm from './components/TextForm';\n\nfunction App() {\n  const [mode, setDarkMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setDarkMode('dark');\n      document.body.style.backgroundColor = 'grey'\n      showalert(\"Dark Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode'\n    } else {\n      setDarkMode('light')\n\n      showalert(\"Light Mode has been enabled\", \"success\");\n      document.body.style.backgroundColor = 'white'\n\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Aman\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showalert={showalert} heading=\"Enter the text to analyse below\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}